@using BudgetProfilerr.Models
@model  BudgetProfilerr.Models.ModelViews.TransactionViewModel
<hr>
<h1>Transactions<br><small>Transactions for the operating users are being displayed.</small></h1>
<div class="row">
    <!--SelectedUsersNavBar-->
    @Html.Partial("_TransactionNavBar", Model.SelectedUsers)
    <!--./SelectedUsersNavBar-->
    <div class="col-md-3"><h3>Tab For User Specific Information</h3></div>
    <!--SelectedUserInformation-->
    @Html.Partial("_transactionUserInformation", Model)
    <!--./SelectedUserInformation-->
</div>
<div class="row">
    <!--Transaction Creation-->
    @Html.Partial("_transactionAddForm", Model)
    <!--./Transaction Creation-->
</div>
<div class="row">
    <div class="col-md-7">
        <!--Transaction Table-->
        @Html.Partial("_transactionTable", Model)
        <!--./Transaction Table-->
    </div>
    <div class="col-md-5">
        <div class="ct-chart ct-green-section" id="pieChart" style="font-size: 30px"></div>
    </div>
</div>
<script>
    $(function () {
        $("li[data-provider='user']").click(function (event) {
            //log
            //console.log("<li> with [data-provider='user'] has been clicked.");
            var userID = { id: event.target.id };
            $.ajax({
                type: 'GET',
                url: '@Url.Action("UpdateUserInformationPView", "Transactions")',
                data: userID,
                dataType: 'html'
            });
            $(this).trigger('submit');  
        });
    });
</script>
<script>
    var myTrans = @JavascriptConvert.SerializeObject(Model.Transactions);
    console.log(myTrans);
    totalExpenses(myTrans);

    $(document).ready(
        function(){
            $('#transactiontable').hover(
                function(){
                    $(this).fadeTo('slow',0.9)
                },function(){
                    $(this).fadeTo('slow',0.55)
                }),
            $('#transactionform').hover(
                function(){
                    $(this).fadeTo('slow',0.9)
                },function(){
                    $(this).fadeTo('slow',0.55)
                })
        });


    // Calculates the total expenses per category for cumulatively for all of the selected users.
    function totalExpenses(myTrans)
    {
        var categories = {};
        categories.Names = [];
        categories.Totals = [];

        $(document).ready(function(){
            $('[dataToggle="tooltip"]').tooltip();
        });

        for(var property in myTrans)
        {
            if (myTrans.hasOwnProperty(property) && myTrans[property].isExpense == true ){
                if(categories.Names.indexOf(myTrans[property].category.name) > -1)
                    categories.Totals[categories.Names.indexOf(myTrans[property].category.name)] += myTrans[property].amount;
                else {
                    categories.Names.push(myTrans[property].category.name);
                    categories.Totals.push(myTrans[property].amount);
                }
            }
        }
        console.log(categories);
        createPieChart(categories)
    }

    function createPieChart(ctg)
    {
        var data = {
            labels: ctg.Names,
            series: ctg.Totals
        };

        var options = {
            labelInterpolationFnc: function(value) {
                return value[0]
            },
            width: '200px',
            height: '300px'
        };

        var responsiveOptions = [
          ['screen and (min-width: 250px)', {
              chartPadding: 10,
              labelOffset: 50,
              labelDirection: 'explode',
              labelInterpolationFnc: function(value) {
                  return value;
              }
          }],
          ['screen and (min-width: 1024px)', {
              labelOffset: 30,
              chartPadding: 20
          }]
        ];
        new Chartist.Pie('#pieChart', data, options, responsiveOptions);
    }
</script>
